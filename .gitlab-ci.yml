stages:
  - build_push
  - update

variables:
  SERVICE_NAME: dev_frontend

build_and_push:
  stage: build_push
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  script:
    - |
      # Tüm GitLab CI değişkenlerini temizle
      CLEAN_REGISTRY_IMAGE=$(echo "$CI_REGISTRY_IMAGE" | tr -d '\n\r' | sed 's/[[:space:]]*$//')
      CLEAN_REGISTRY=$(echo "$CI_REGISTRY" | tr -d '\n\r' | sed 's/[[:space:]]*$//')
      CLEAN_REGISTRY_USER=$(echo "$CI_REGISTRY_USER" | tr -d '\n\r' | sed 's/[[:space:]]*$//')
      CLEAN_JOB_TOKEN=$(echo "$CI_JOB_TOKEN" | tr -d '\n\r' | sed 's/[[:space:]]*$//')
      
      IMAGE_NAME="${CLEAN_REGISTRY_IMAGE}/test_kode"
      IMAGE_TAG="dev_${CI_PIPELINE_ID}"
      FULL_IMAGE="${IMAGE_NAME}:${IMAGE_TAG}"
      
      echo "DEBUG: CLEAN_REGISTRY=[${CLEAN_REGISTRY}]"
      echo "DEBUG: CLEAN_REGISTRY_USER=[${CLEAN_REGISTRY_USER}]"
      echo "DEBUG: IMAGE_NAME=[${IMAGE_NAME}]"
      echo "DEBUG: FULL_IMAGE=[${FULL_IMAGE}]"
      
      echo "BUILDING IMAGE: ${FULL_IMAGE}"
      docker build -t "${FULL_IMAGE}" .
      echo "BUILD COMPLETED."

      echo "Logging into GitLab Container Registry..."
      echo "$CLEAN_JOB_TOKEN" | docker login -u "$CLEAN_REGISTRY_USER" --password-stdin "$CLEAN_REGISTRY"
      echo "PUSHING IMAGE TO REGISTRY: ${FULL_IMAGE}"
      docker push "${FULL_IMAGE}"
      echo "PUSH COMPLETED."
      
      # Sonraki job için değişkenleri export et
      echo "FULL_IMAGE=${FULL_IMAGE}" >> build_vars.env
      echo "CLEAN_REGISTRY=${CLEAN_REGISTRY}" >> build_vars.env
      echo "CLEAN_REGISTRY_USER=${CLEAN_REGISTRY_USER}" >> build_vars.env
      echo "CLEAN_JOB_TOKEN=${CLEAN_JOB_TOKEN}" >> build_vars.env
  artifacts:
    reports:
      dotenv: build_vars.env
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

update:
  stage: update
  script:
    - |
      # Eğer önceki job'dan gelen değişkenler yoksa, yeniden oluştur
      if [ -z "$FULL_IMAGE" ]; then
        CLEAN_REGISTRY_IMAGE=$(echo "$CI_REGISTRY_IMAGE" | tr -d '\n\r' | sed 's/[[:space:]]*$//')
        IMAGE_NAME="${CLEAN_REGISTRY_IMAGE}/test_kode"
        IMAGE_TAG="dev_${CI_PIPELINE_ID}"
        FULL_IMAGE="${IMAGE_NAME}:${IMAGE_TAG}"
      fi
      
      if [ -z "$CLEAN_REGISTRY" ]; then
        CLEAN_REGISTRY=$(echo "$CI_REGISTRY" | tr -d '\n\r' | sed 's/[[:space:]]*$//')
        CLEAN_REGISTRY_USER=$(echo "$CI_REGISTRY_USER" | tr -d '\n\r' | sed 's/[[:space:]]*$//')
        CLEAN_JOB_TOKEN=$(echo "$CI_JOB_TOKEN" | tr -d '\n\r' | sed 's/[[:space:]]*$//')
      fi
      
      echo "Logging into GitLab Container Registry..."
      echo "$CLEAN_JOB_TOKEN" | docker login -u "$CLEAN_REGISTRY_USER" --password-stdin "$CLEAN_REGISTRY"
      echo "Updating Docker service with image: ${FULL_IMAGE}"
      docker service update --with-registry-auth --image "${FULL_IMAGE}" "$SERVICE_NAME"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  dependencies:
    - build_and_push